[{"name":"App.R","content":"rm(list=ls())\n#22/10/14\nlibrary(shinythemes)\nlibrary(shiny)\nlibrary(BiocManager)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(shinylive)\nlibrary(httpuv)\n\n#Functions to use later######\n\nConleyEquation1<- function(x){\nout <- x*1000  \nreturn(out)\n}\n\nConleyEquation2<- function(x){\n  out <- x/1000  \n  return(out)\n}\n#Shiny App ####\n#SERVER####\n# Define server logic ----\n\nserver <- function(input, output, session) {\n  \n  # Reactive for analysis type selection\n  analysisType_reactive <- reactive({\n    input$analysisType\n  })\n  \n  # Reactive for calculation input\n  calculationInput_reactive <- reactive({\n    as.numeric(input$CalculationInput)\n  })\n  \n  # Reactive to calculate output based on analysis type and input\n  Calculation_Output <- reactive({\n    if(analysisType_reactive() == \"Analysis1\"){\n      result <- ConleyEquation1(calculationInput_reactive())\n    } else if (analysisType_reactive() == \"Analysis2\") {\n      result <- ConleyEquation2(calculationInput_reactive())\n    }\n    return(result)\n  })\n  \n  # Render the result of the calculation\n  output$Calculation_Output <- renderText({\n    req(Calculation_Output())  # Ensure reactive output is available\n    paste(\"Calculated Output: \", Calculation_Output())\n  })\n  \n  # Render analysis type\n  output$analysisType_output <- renderText({\n    paste(\"Selected Analysis Type: \", analysisType_reactive())\n  })\n  \n  # Render the input value\n  output$value <- renderPrint({\n    input$CalculationInput\n  })\n}\n\n#END OF SERVER##########################################################################################\n\n\n\n#UI######################################################################################################################################################################\n#define UI w/ theme\nui <- fluidPage(theme = shinytheme(\"lumen\"),\n                tags$head(tags$link(rel=\"shortcut icon\", href=\"favicon.ico\")),\n                tags$h4(tags$b(HTML(\"Title\"))),\n                navbarPage(id = \"tabs\", title = actionLink(inputId = \"link_to_tabpanel_a\", label = \"Conley Calculator\"),\n                           conditionalPanel( condition = \"input.tabs == 'home'\",\n                                             selectInput(\"analysisType\", label = h6(\"Analysis\"), \n                                                         choices = list(\"Analysis 1\" = \"Analysis1\", \"Analysis 2\" = \"Analysis2\"), selected = \"Analysis2\")),\n                           tabPanel(value=\"home\", title = \"Calculation\", \n                                    fluidRow(\n                                      column(2,\n                                             wellPanel(\n                                               uiOutput(\"FUZZ\"),\n                                               textInput(\"CalculationInput\", \n                                                            label = h4(\"Input\"), \n                                                            value = 1000),\n                                               actionButton(\"MAINreset\", \"Reset\"),\n                                               tableOutput(\"MAIN_Size_Table\")                                               \n                                             )\n                                      ),\n                                      column(10,\n                                             verbatimTextOutput(\"analysisType_output\"),\n                                             verbatimTextOutput(\"value\"),\n                                             verbatimTextOutput(\"Calculation_Output\"),\n                                      )\n                                    )\n                           ),\n                          \n                           tabPanel(value=\"hide\", title = \"Details\",\n                                    tags$div(\n                                      wellPanel(\n                                        tags$h5(tags$i(\"Background on the Equation used, etc.\")),\n                                      )\n                                    )#DIV\n                           )#TabPanel\n                           \n                )# - navpage\n                \n) # - ui + fluidpage and theme\n\n# Create Shiny app ----\nshinyApp(ui, server)","type":"text"},{"name":"Conley.R","content":"rm(list=ls())\n#22/10/14\nlibrary(shinythemes)\nlibrary(shiny)\nlibrary(BiocManager)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(shinylive)\nlibrary(httpuv)\n\n#Functions to use later######\n\nConleyEquation1<- function(x){\nout <- x*1000  \nreturn(out)\n}\n\nConleyEquation2<- function(x){\n  out <- x/1000  \n  return(out)\n}\n#Shiny App ####\n#SERVER####\n# Define server logic ----\n\nserver <- function(input, output, session) {\n  \n  # Reactive for analysis type selection\n  analysisType_reactive <- reactive({\n    input$analysisType\n  })\n  \n  # Reactive for calculation input\n  calculationInput_reactive <- reactive({\n    as.numeric(input$CalculationInput)\n  })\n  \n  # Reactive to calculate output based on analysis type and input\n  Calculation_Output <- reactive({\n    if(analysisType_reactive() == \"Analysis1\"){\n      result <- ConleyEquation1(calculationInput_reactive())\n    } else if (analysisType_reactive() == \"Analysis2\") {\n      result <- ConleyEquation2(calculationInput_reactive())\n    }\n    return(result)\n  })\n  \n  # Render the result of the calculation\n  output$Calculation_Output <- renderText({\n    req(Calculation_Output())  # Ensure reactive output is available\n    paste(\"Calculated Output: \", Calculation_Output())\n  })\n  \n  # Render analysis type\n  output$analysisType_output <- renderText({\n    paste(\"Selected Analysis Type: \", analysisType_reactive())\n  })\n  \n  # Render the input value\n  output$value <- renderPrint({\n    input$CalculationInput\n  })\n}\n\n#END OF SERVER##########################################################################################\n\n\n\n#UI######################################################################################################################################################################\n#define UI w/ theme\nui <- fluidPage(theme = shinytheme(\"lumen\"),\n                tags$head(tags$link(rel=\"shortcut icon\", href=\"favicon.ico\")),\n                tags$h4(tags$b(HTML(\"Title\"))),\n                navbarPage(id = \"tabs\", title = actionLink(inputId = \"link_to_tabpanel_a\", label = \"Conley Calculator\"),\n                           conditionalPanel( condition = \"input.tabs == 'home'\",\n                                             selectInput(\"analysisType\", label = h6(\"Analysis\"), \n                                                         choices = list(\"Analysis 1\" = \"Analysis1\", \"Analysis 2\" = \"Analysis2\"), selected = \"Analysis2\")),\n                           tabPanel(value=\"home\", title = \"Calculation\", \n                                    fluidRow(\n                                      column(2,\n                                             wellPanel(\n                                               uiOutput(\"FUZZ\"),\n                                               textInput(\"CalculationInput\", \n                                                            label = h4(\"Input\"), \n                                                            value = 1000),\n                                               actionButton(\"MAINreset\", \"Reset\"),\n                                               tableOutput(\"MAIN_Size_Table\")                                               \n                                             )\n                                      ),\n                                      column(10,\n                                             verbatimTextOutput(\"analysisType_output\"),\n                                             verbatimTextOutput(\"value\"),\n                                             verbatimTextOutput(\"Calculation_Output\"),\n                                      )\n                                    )\n                           ),\n                          \n                           tabPanel(value=\"hide\", title = \"Details\",\n                                    tags$div(\n                                      wellPanel(\n                                        tags$h5(tags$i(\"Background on the Equation used, etc.\")),\n                                      )\n                                    )#DIV\n                           )#TabPanel\n                           \n                )# - navpage\n                \n) # - ui + fluidpage and theme\n\n# Create Shiny app ----\nshinyApp(ui, server)","type":"text"}]
